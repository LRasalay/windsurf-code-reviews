rules:
  # --- SECURITY POLICIES ---
  no_plaintext_secrets:
    description: "Block hard-coded secrets"
    pattern: "(AKIA[A-Z0-9]{16}|secret|password|token|apiKey|PRIVATE KEY)"
    on: code
    action: block

  disallow_eval:
    description: "Eval is not permitted per security policy"
    pattern: "\\beval\\("
    on: javascript
    action: block

  validate_dependency_sources:
    description: "Block unknown or untrusted npm sources"
    pattern: "github.com/.*/raw"
    on: config
    action: warn

  require_error_logging:
    description: "catch blocks must log"
    pattern: "catch \\((.*?)\\)\\s*\\{((?!console\\.error).)*?\\}"
    on: javascript
    action: warn

  check_pii:
    description: "Warn if PII terms are introduced"
    pattern: "(ssn|dob|fullName|address|accountNumber)"
    on: code
    action: warn

  # --- ENGINEERING POLICIES ---
  enforce_jira_reference:
    description: "Commit must reference JIRA ticket"
    pattern: "((GRC|ENG|PROJ)-[0-9]+)"
    on: commit_message
    action: warn

  enforce_docstrings:
    description: "Exported functions require JSDoc"
    pattern: "export function (?!.*\\/\\*\\*)"
    on: javascript
    action: warn

 rules:

  # --- CODE STYLE & READABILITY ---
  require_jsdoc:
    description: "Exported functions must include JSDoc"
    pattern: "export function (?!.*\\/\\*\\*)"
    on: javascript
    action: warn

  no_console_log:
    description: "Use a logger instead of console.log"
    pattern: "console\\.log"
    on: javascript
    action: warn

  enforce_async_await:
    description: "Prefer async/await over .then() chaining"
    pattern: "\\.then\\("
    on: javascript
    action: suggest_fix

  enforce_camel_case:
    description: "Variables must be camelCase"
    pattern: "\\b[A-Z][a-zA-Z0-9]* ?="
    on: code
    action: warn

  # --- ERROR HANDLING ---
  require_error_logging:
    description: "Every catch block must log the error"
    pattern: "catch \\((.*?)\\)\\s*\\{((?!log|console\\.error).)*?\\}"
    on: javascript
    action: warn

  # --- SECURITY BEST PRACTICES ---
  block_plaintext_secrets:
    description: "Block hard-coded secrets"
    pattern: "(AKIA[A-Z0-9]{16}|secret|password|token|apiKey|PRIVATE KEY)"
    on: code
    action: block

  prevent_eval:
    description: "Eval is forbidden"
    pattern: "\\beval\\("
    on: javascript
    action: block

  validate_dependency_urls:
    description: "No untrusted dependency sources"
    pattern: "http://"
    on: config
    action: warn

  # --- TESTING REQUIREMENT ---
  require_test_for_exported_function:
    description: "Every exported function must have a matching test"
    pattern: "export function (\\w+)"
    on: javascript
    action: warn

  # --- COMMIT QUALITY ---
  enforce_commit_format:
    description: "Use Conventional Commit format"
    pattern: "^(feat|fix|chore|docs|refactor|test|ci)"
    on: commit_message
    action: warn

